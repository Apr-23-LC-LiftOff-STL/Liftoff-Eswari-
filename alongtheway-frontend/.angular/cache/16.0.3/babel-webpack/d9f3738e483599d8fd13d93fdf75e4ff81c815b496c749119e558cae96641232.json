{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass AuthService {\n  constructor() {\n    this.isLoggedIn = new BehaviorSubject(false);\n  }\n  login() {\n    this.isLoggedIn.next(true);\n  }\n  logout() {\n    this.isLoggedIn.next(false);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","isLoggedIn","login","next","logout","factory","ɵfac","providedIn"],"sources":["C:\\Users\\wtwen\\development\\LaunchCode\\Liftoff\\Liftoff-Eswari-\\alongtheway-frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor() {}\n\n  login() {\n    this.isLoggedIn.next(true);\n  }\n\n  logout() {\n    this.isLoggedIn.next(false);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAEtC,MAGaC,WAAW;EAGtBC,YAAA;IAFA,KAAAC,UAAU,GAA6B,IAAIH,eAAe,CAAU,KAAK,CAAC;EAE3D;EAEfI,KAAKA,CAAA;IACH,IAAI,CAACD,UAAU,CAACE,IAAI,CAAC,IAAI,CAAC;EAC5B;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACH,UAAU,CAACE,IAAI,CAAC,KAAK,CAAC;EAC7B;;;mBAXWJ,WAAW;AAAA;;SAAXA,WAAW;EAAAM,OAAA,EAAXN,WAAW,CAAAO,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}