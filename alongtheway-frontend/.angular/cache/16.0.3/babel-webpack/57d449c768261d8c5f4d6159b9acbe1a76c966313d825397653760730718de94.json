{"ast":null,"code":"import { Loader } from '@googlemaps/js-api-loader';\nimport { environment } from 'src/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../weather/weather.component\";\nconst _c0 = [\"mpgInput\"];\nconst _c1 = [\"tankInput\"];\nfunction HomeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_div_12_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const stop_r4 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(stop_r4.location = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_12_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.removeStop(i_r5));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const stop_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"stop-input-\", i_r5, \"\");\n    i0.ɵɵproperty(\"ngModel\", stop_r4.location);\n  }\n}\nfunction HomeComponent_li_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const place_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", place_r9.name, \", \", place_r9.vicinity, \"\");\n  }\n}\nclass HomeComponent {\n  constructor(http) {\n    this.http = http;\n    this.placesData = {}; // Initialized to an empty object\n    this.stops = [];\n    this.environment = environment;\n    this.title = 'alongtheway-frontend';\n    this.startLocation = \"\";\n    this.endLocation = \"\";\n    this.averageMPG = 0;\n    this.tankCapacity = 0;\n    this.map = null;\n    this.directionsService = null;\n    this.directionsRenderer = null;\n    this.interest = \"\";\n  }\n  getWeather(point, lat, lng, time) {\n    if (!lat || !lng) {\n      return;\n    }\n    const apiKey = environment.weatherApiKey;\n    const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${apiKey}&units=imperial`;\n    const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&appid=${apiKey}&units=imperial`;\n    this.http.get(weatherUrl).subscribe(weather => {\n      this.http.get(forecastUrl).subscribe(forecast => {\n        if (weather && forecast) {\n          let weatherIcon = weather.weather[0].icon;\n          let weatherTemp = weather.main.temp;\n          if (time) {\n            for (let f of forecast.list) {\n              if (f.dt < time) continue;\n              weatherIcon = f.weather[0].icon;\n              weatherTemp = f.main.temp;\n              break;\n            }\n          }\n          let iconElement = document.getElementById(`${point}-weather-icon`);\n          iconElement.setAttribute(\"src\", \"https://openweathermap.org/img/wn/\" + weatherIcon + \"@2x.png\");\n          let tempElement = document.getElementById(`${point}-weather-temp`);\n          tempElement.textContent = Math.round(weatherTemp) + \"°F\";\n        }\n      });\n    });\n  }\n  ngOnInit() {\n    const loader = new Loader({\n      apiKey: environment.apiKey,\n      libraries: ['places']\n    });\n    loader.load().then(() => {\n      const mapElement = document.getElementById(\"map\");\n      if (mapElement) {\n        this.map = new google.maps.Map(mapElement, {\n          center: {\n            lat: 39.828175,\n            lng: -98.5795\n          },\n          zoom: 6\n        });\n        this.directionsService = new google.maps.DirectionsService();\n        this.directionsRenderer = new google.maps.DirectionsRenderer({\n          map: this.map\n        });\n        this.initAutocomplete();\n      } else {\n        console.error(\"Could not find map element\");\n      }\n      for (let i = 0; i < this.stops.length; i++) {\n        this.initStopAutocomplete(i);\n      }\n    });\n  }\n  initAutocomplete() {\n    const startInput = document.getElementById(\"start-input\");\n    const endInput = document.getElementById(\"end-input\");\n    // const stopInput = document.getElementById(\"stop-input-{{i}}\") as HTMLInputElement;\n    const mpgInput = document.getElementById(\"mpg-input\");\n    const tankInput = document.getElementById(\"tank-input\");\n    const startAutocomplete = new google.maps.places.Autocomplete(startInput);\n    const endAutocomplete = new google.maps.places.Autocomplete(endInput);\n    // const stopAutocomplete = new google.maps.places.Autocomplete(stopInput);\n    startAutocomplete.addListener(\"place_changed\", () => {\n      var _a, _b, _c;\n      const place = startAutocomplete.getPlace();\n      if (place && place.geometry && place.geometry.location) {\n        (_a = this.map) === null || _a === void 0 ? void 0 : _a.setCenter(place.geometry.location);\n        (_b = this.map) === null || _b === void 0 ? void 0 : _b.setZoom(14);\n        this.startLocation = (_c = place.formatted_address) !== null && _c !== void 0 ? _c : \"\";\n        console.log(\"Start location:\", this.startLocation);\n        this.getWeather(\"start\", place.geometry.location.lat(), place.geometry.location.lng());\n      }\n    });\n    endAutocomplete.addListener(\"place_changed\", () => {\n      var _a, _b, _c;\n      const place = endAutocomplete.getPlace();\n      if (place && place.geometry && place.geometry.location) {\n        (_a = this.map) === null || _a === void 0 ? void 0 : _a.setCenter(place.geometry.location);\n        (_b = this.map) === null || _b === void 0 ? void 0 : _b.setZoom(14);\n        this.endLocation = (_c = place.formatted_address) !== null && _c !== void 0 ? _c : \"\";\n        console.log(\"End location:\", this.endLocation);\n        this.getWeather(\"end\", place.geometry.location.lat(), place.geometry.location.lng());\n      }\n    });\n    setTimeout(() => {\n      const mpgInput = this.mpgInputRef.nativeElement;\n      const tankInput = this.tankInputRef.nativeElement;\n      mpgInput.addEventListener(\"change\", () => {\n        this.averageMPG = Number(mpgInput.value);\n        console.log(\"Average MPG:\", this.averageMPG);\n      });\n      tankInput.addEventListener(\"change\", () => {\n        this.tankCapacity = Number(tankInput.value);\n        console.log(\"Tank Capacity:\", this.tankCapacity);\n      });\n    });\n  }\n  submitForm() {\n    if (!this.interest) {\n      console.error(\"Interest not set\");\n      return;\n    }\n    this.calculateRoute();\n  }\n  handlePlacesData(placesData) {\n    if (placesData.status === 'OK') {\n      this.placesData = placesData;\n    } else {\n      console.error(\"Places API request failed:\", placesData.status);\n    }\n  }\n  calculateRoute() {\n    var _a;\n    this.averageMPG = +this.averageMPG;\n    this.tankCapacity = +this.tankCapacity;\n    const apiKey = environment.apiKey;\n    console.log(\"Calculating route...\");\n    console.log(\"Start location:\", this.startLocation);\n    console.log(\"End location:\", this.endLocation);\n    console.log(\"Interest:\", this.interest);\n    console.log(\"Average MPG:\", this.averageMPG);\n    console.log(\"Tank Capacity:\", this.tankCapacity);\n    if (!this.directionsService || !this.directionsRenderer) {\n      console.error(\"Directions service or renderer not initialized\");\n      return;\n    }\n    if (!this.startLocation || !this.endLocation) {\n      console.error(\"Start or end location not set\");\n      return;\n    }\n    if (!this.interest) {\n      console.error(\"Interest not set\");\n      return;\n    }\n    if (!this.averageMPG || !this.tankCapacity) {\n      console.error(\"Average MPG or tank capacity not set\");\n      return;\n    }\n    (_a = this.directionsService) === null || _a === void 0 ? void 0 : _a.route({\n      origin: this.startLocation,\n      destination: this.endLocation,\n      waypoints: this.stops.map(stop => ({\n        location: stop.location,\n        stopover: true\n      })),\n      travelMode: google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n      if (status === google.maps.DirectionsStatus.OK) {\n        console.log(\"Route calculated successfully\");\n        (_a = this.directionsRenderer) === null || _a === void 0 ? void 0 : _a.setDirections(result);\n        // calculate the midpoint of the route\n        // const midLat = (result!.routes[0].bounds.getNorthEast().lat() + result!.routes[0].bounds.getSouthWest().lat()) / 2;\n        // const midLng = (result!.routes[0].bounds.getNorthEast().lng() + result!.routes[0].bounds.getSouthWest().lng()) / 2;\n        // console.log('Midpoint:', midLat, midLng);\n        // new google.maps.Marker({\n        //   position: {lat: midLat, lng: midLng},\n        //   map: this.map,\n        //   title: 'Midpoint'\n        // });\n        // make the Google Places API request using the PlacesService\n        //     const placesService = new google.maps.places.PlacesService(this.map as google.maps.Map);\n        //     placesService.nearbySearch({\n        //           location: {lat: midLat, lng: midLng},\n        //           radius: 10000,\n        //           type: this.interest\n        //     }, (results, status) => {\n        //   if (status === google.maps.places.PlacesServiceStatus.OK) {\n        //     this.handlePlacesData({results: results, status: status});\n        //   } else {\n        //     console.error(\"Places API request failed:\", status);\n        //   }\n        // });\n        // handle the placesData\n        // this.http.get(placesUrl).subscribe((placesData: any) => {\n        //   this.handlePlacesData(placesData);\n        // });\n        //Get destination time for weather forecast\n        let destinationTime;\n        let duration = (_d = (_c = (_b = result === null || result === void 0 ? void 0 : result.routes[0]) === null || _b === void 0 ? void 0 : _b.legs[0]) === null || _c === void 0 ? void 0 : _c.duration) === null || _d === void 0 ? void 0 : _d.value;\n        let lat = (_f = (_e = result === null || result === void 0 ? void 0 : result.routes[0]) === null || _e === void 0 ? void 0 : _e.legs[0]) === null || _f === void 0 ? void 0 : _f.end_location.lat();\n        let lng = (_h = (_g = result === null || result === void 0 ? void 0 : result.routes[0]) === null || _g === void 0 ? void 0 : _g.legs[0]) === null || _h === void 0 ? void 0 : _h.end_location.lng();\n        if (duration) {\n          destinationTime = Date.now() / 1000 + duration;\n        }\n        this.getWeather(\"end\", lat, lng, destinationTime);\n        // Get the direction steps\n        const steps = (_k = (_j = result === null || result === void 0 ? void 0 : result.routes[0]) === null || _j === void 0 ? void 0 : _j.legs[0]) === null || _k === void 0 ? void 0 : _k.steps;\n        if (steps) {\n          this.showSteps(steps);\n        }\n        // Calculate gas usage\n        const distanceMeters = (_o = (_m = (_l = result === null || result === void 0 ? void 0 : result.routes[0]) === null || _l === void 0 ? void 0 : _l.legs[0]) === null || _m === void 0 ? void 0 : _m.distance) === null || _o === void 0 ? void 0 : _o.value;\n        if (distanceMeters) {\n          const distanceMiles = distanceMeters * 0.000621371; // Convert meters to miles\n          const tanksNeeded = distanceMiles / (this.averageMPG * this.tankCapacity);\n          console.log(\"Tanks of gas needed:\", tanksNeeded);\n          // Display gas usage\n          const gasUsageInfoElement = document.getElementById(\"gas-usage-info\");\n          if (gasUsageInfoElement) {\n            gasUsageInfoElement.textContent = `Distance: ${distanceMiles.toFixed(2)} miles. Tanks of gas needed: ${tanksNeeded.toFixed(2)}`;\n          }\n        } else {\n          console.error(\"Could not calculate distance\");\n        }\n      } else {\n        console.error(\"Directions request failed:\", status);\n      }\n    });\n  }\n  addStop() {\n    const index = this.stops.length;\n    this.stops.push({\n      location: ''\n    });\n    setTimeout(() => this.initStopAutocomplete(index));\n  }\n  removeStop(index) {\n    this.stops.splice(index, 1);\n    // After this line, Angular will automatically remove the corresponding inputs\n  }\n\n  initStopAutocomplete(index) {\n    const stopInput = document.getElementById(`stop-input-${index}`);\n    const stopAutocomplete = new google.maps.places.Autocomplete(stopInput);\n    stopAutocomplete.addListener(\"place_changed\", () => {\n      var _a, _b, _c;\n      const place = stopAutocomplete.getPlace();\n      if (place && place.geometry && place.geometry.location) {\n        (_a = this.map) === null || _a === void 0 ? void 0 : _a.setCenter(place.geometry.location);\n        (_b = this.map) === null || _b === void 0 ? void 0 : _b.setZoom(14);\n        this.stops[index].location = (_c = place.formatted_address) !== null && _c !== void 0 ? _c : \"\";\n        console.log(`Stop location ${index}:`, this.stops[index].location);\n        this.getWeather(`stop${index}`, place.geometry.location.lat(), place.geometry.location.lng());\n      }\n    });\n  }\n  showSteps(steps) {\n    const stepsContainer = document.getElementById('direction-steps');\n    if (stepsContainer) {\n      stepsContainer.innerHTML = \"\"; // Clear previous steps\n      steps.forEach(step => {\n        const stepDiv = document.createElement('div');\n        stepDiv.innerHTML = step.instructions;\n        stepsContainer.appendChild(stepDiv);\n      });\n    }\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  viewQuery: function HomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mpgInputRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tankInputRef = _t.first);\n    }\n  },\n  decls: 47,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"form-container\"], [\"for\", \"start-input\"], [\"id\", \"start-input\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"start-weather-icon\", 1, \"weather-icon\"], [\"id\", \"start-weather-temp\", 1, \"weather-temp\"], [\"href\", \"#\", 3, \"click\"], [\"id\", \"stopInputs\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"end-input\"], [\"id\", \"end-input\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"end-weather-icon\", 1, \"weather-icon\"], [\"id\", \"end-weather-temp\", 1, \"weather-temp\"], [\"for\", \"average-mpg-input\"], [\"id\", \"average-mpg-input\", \"type\", \"number\", \"min\", \"0\", 3, \"ngModel\", \"ngModelChange\"], [\"mpgInput\", \"\"], [\"for\", \"tank-capacity-input\"], [\"id\", \"tank-capacity-input\", \"type\", \"number\", \"min\", \"0\", 3, \"ngModel\", \"ngModelChange\"], [\"tankInput\", \"\"], [\"for\", \"interest-input\"], [\"id\", \"interest-input\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"restaurant\"], [\"value\", \"museum\"], [\"value\", \"park\"], [3, \"click\"], [\"id\", \"places-container\", 1, \"places-container\"], [\"id\", \"places-list\"], [\"id\", \"map\", 1, \"map-container\"], [\"type\", \"text\", 3, \"id\", \"ngModel\", \"ngModelChange\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-weather\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"label\", 2);\n      i0.ɵɵtext(4, \"Start location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.startLocation = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"img\", 4)(7, \"label\", 5)(8, \"br\");\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_9_listener() {\n        return ctx.addStop();\n      });\n      i0.ɵɵtext(10, \"Add stop to your trip\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵtemplate(12, HomeComponent_div_12_Template, 4, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \"End location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.endLocation = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"img\", 11)(17, \"label\", 12)(18, \"br\");\n      i0.ɵɵelementStart(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Average MPG:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.averageMPG = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"label\", 16);\n      i0.ɵɵtext(25, \"Tank Capacity (Gallons):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.tankCapacity = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelementStart(29, \"label\", 19);\n      i0.ɵɵtext(30, \"Interest:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"select\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_select_ngModelChange_31_listener($event) {\n        return ctx.interest = $event;\n      });\n      i0.ɵɵelementStart(32, \"option\", 21);\n      i0.ɵɵtext(33, \"Restaurant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"option\", 22);\n      i0.ɵɵtext(35, \"Museum\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"option\", 23);\n      i0.ɵɵtext(37, \"Park\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵelementStart(39, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_39_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵtext(40, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 25)(42, \"h3\");\n      i0.ɵɵtext(43, \"Places of Interest\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"ul\", 26);\n      i0.ɵɵtemplate(45, HomeComponent_li_45_Template, 2, 2, \"li\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(46, \"div\", 27);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.startLocation);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.endLocation);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.averageMPG);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.tankCapacity);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.interest);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.placesData.results);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.NgModel, i4.WeatherComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  background-image: linear-gradient(#07487D, #77CECF);\\r\\n}\\r\\n\\r\\n.form-container[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.weather-icon[_ngcontent-%COMP%] {\\r\\nheight:40px;\\r\\nmargin-bottom: -15px;\\r\\n}\\r\\n\\r\\n.weather-temp[_ngcontent-%COMP%] {\\r\\nfont-size: 18px;\\r\\n}\\r\\n\\r\\n.queue[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  border: 1px solid black;\\r\\n  \\r\\n  background-color: #fff;\\r\\n  height: 60vh;\\r\\n  padding: 10px;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.map-container[_ngcontent-%COMP%] {\\r\\n  flex: 2;\\r\\n  height: 88vh;\\r\\n  \\r\\n}\\r\\n\\r\\n.places-container[_ngcontent-%COMP%] {\\r\\n  \\r\\n  flex: 1;\\r\\n  height: 60vh;\\r\\n  overflow-y: auto;\\r\\n  \\r\\n  \\r\\n  \\r\\n  padding: 10px;\\r\\n  background-color: #f9f9f9;\\r\\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\\r\\n  \\r\\n}\\r\\n\\r\\n.places-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.places-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\r\\n  padding-left: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbURBQW1EO0FBQ3JEOztBQUVBO0VBQ0UsT0FBTztBQUNUOztBQUVBO0FBQ0EsV0FBVztBQUNYLG9CQUFvQjtBQUNwQjs7QUFFQTtBQUNBLGVBQWU7QUFDZjs7QUFFQTtFQUNFLE9BQU87RUFDUCx1QkFBdUI7RUFDdkIsd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLE9BQU87RUFDUCxZQUFZO0VBQ1osMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLE9BQU87RUFDUCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLHFCQUFxQjtFQUNyQixjQUFjO0VBQ2QsWUFBWTtFQUNaLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsb0NBQW9DO0VBQ3BDLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7O0FBR0E7Ozs7Ozs7R0FPRyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCMwNzQ4N0QsICM3N0NFQ0YpO1xyXG59XHJcblxyXG4uZm9ybS1jb250YWluZXIge1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi53ZWF0aGVyLWljb24ge1xyXG5oZWlnaHQ6NDBweDtcclxubWFyZ2luLWJvdHRvbTogLTE1cHg7XHJcbn1cclxuXHJcbi53ZWF0aGVyLXRlbXAge1xyXG5mb250LXNpemU6IDE4cHg7XHJcbn1cclxuXHJcbi5xdWV1ZSB7XHJcbiAgZmxleDogMTtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAvKiBwb3NpdGlvbjogcmVsYXRpdmU7ICovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBoZWlnaHQ6IDYwdmg7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbn1cclxuXHJcbi5tYXAtY29udGFpbmVyIHtcclxuICBmbGV4OiAyO1xyXG4gIGhlaWdodDogODh2aDtcclxuICAvKiBBZGp1c3QgdGhpcyBhcyBuZWVkZWQgKi9cclxufVxyXG5cclxuLnBsYWNlcy1jb250YWluZXIge1xyXG4gIC8qIHdpZHRoOiAzMDBweDsgKi9cclxuICBmbGV4OiAxO1xyXG4gIGhlaWdodDogNjB2aDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIC8qIHBvc2l0aW9uOiBmaXhlZDsgKi9cclxuICAvKiByaWdodDogMDsgKi9cclxuICAvKiB0b3A6IDA7ICovXHJcbiAgcGFkZGluZzogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwwLDAsMC4zKTtcclxuICAvKiBib3JkZXI6IDFweCBzb2xpZCBibGFjazsgKi9cclxufVxyXG5cclxuLnBsYWNlcy1jb250YWluZXIgaDMge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbn1cclxuXHJcbi5wbGFjZXMtY29udGFpbmVyIHVsIHtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcblxyXG4vKiAuZnVsbCB7XHJcbiAgICBmbGV4OiAyO1xyXG4gICAgd2lkdGg6IDQ4dnc7XHJcbiAgICBoZWlnaHQ6IDQ4dmg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgXHJcbn0gKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { HomeComponent };","map":{"version":3,"names":["Loader","environment","i0","ɵɵelementStart","ɵɵlistener","HomeComponent_div_12_Template_input_ngModelChange_1_listener","$event","restoredCtx","ɵɵrestoreView","_r7","stop_r4","$implicit","ɵɵresetView","location","ɵɵelementEnd","HomeComponent_div_12_Template_button_click_2_listener","i_r5","index","ctx_r8","ɵɵnextContext","removeStop","ɵɵtext","ɵɵadvance","ɵɵpropertyInterpolate1","ɵɵproperty","ɵɵtextInterpolate2","place_r9","name","vicinity","HomeComponent","constructor","http","placesData","stops","title","startLocation","endLocation","averageMPG","tankCapacity","map","directionsService","directionsRenderer","interest","getWeather","point","lat","lng","time","apiKey","weatherApiKey","weatherUrl","forecastUrl","get","subscribe","weather","forecast","weatherIcon","icon","weatherTemp","main","temp","f","list","dt","iconElement","document","getElementById","setAttribute","tempElement","textContent","Math","round","ngOnInit","loader","libraries","load","then","mapElement","google","maps","Map","center","zoom","DirectionsService","DirectionsRenderer","initAutocomplete","console","error","i","length","initStopAutocomplete","startInput","endInput","mpgInput","tankInput","startAutocomplete","places","Autocomplete","endAutocomplete","addListener","place","getPlace","geometry","_a","setCenter","_b","setZoom","_c","formatted_address","log","setTimeout","mpgInputRef","nativeElement","tankInputRef","addEventListener","Number","value","submitForm","calculateRoute","handlePlacesData","status","route","origin","destination","waypoints","stop","stopover","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","setDirections","destinationTime","duration","_d","routes","legs","_f","_e","end_location","_h","_g","Date","now","steps","_k","_j","showSteps","distanceMeters","_o","_m","_l","distance","distanceMiles","tanksNeeded","gasUsageInfoElement","toFixed","addStop","push","splice","stopInput","stopAutocomplete","stepsContainer","innerHTML","forEach","step","stepDiv","createElement","instructions","appendChild","ɵɵdirectiveInject","i1","HttpClient","selectors","viewQuery","HomeComponent_Query","rf","ctx","ɵɵelement","HomeComponent_Template_input_ngModelChange_5_listener","HomeComponent_Template_button_click_9_listener","ɵɵtemplate","HomeComponent_div_12_Template","HomeComponent_Template_input_ngModelChange_15_listener","HomeComponent_Template_input_ngModelChange_21_listener","HomeComponent_Template_input_ngModelChange_26_listener","HomeComponent_Template_select_ngModelChange_31_listener","HomeComponent_Template_button_click_39_listener","HomeComponent_li_45_Template","results"],"sources":["C:\\Users\\Jonathan\\Documents\\Connect-FE-BE\\alongtheway-frontend\\src\\app\\home\\home.component.ts","C:\\Users\\Jonathan\\Documents\\Connect-FE-BE\\alongtheway-frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\nimport { environment } from 'src/environments/environments';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  placesData: any = {};  // Initialized to an empty object\r\n  stops: { location: string }[] = [];\r\n\r\n  environment = environment;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWeather(point: string, lat?: number, lng?: number, time?: number): void {\r\n    if (!lat || !lng) {\r\n      return;\r\n    }\r\n\r\n    const apiKey = environment.weatherApiKey;\r\n    const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${apiKey}&units=imperial`;\r\n    const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&appid=${apiKey}&units=imperial`;\r\n\r\n\r\n    this.http.get(weatherUrl).subscribe((weather: any) => {\r\n      this.http.get(forecastUrl).subscribe((forecast: any) => {\r\n        if (weather && forecast) {\r\n          let weatherIcon = weather.weather[0].icon;\r\n          let weatherTemp = weather.main.temp;\r\n\r\n          if (time) {\r\n            for (let f of forecast.list) {\r\n              if (f.dt < time) continue;\r\n\r\n              weatherIcon = f.weather[0].icon;\r\n              weatherTemp = f.main.temp;\r\n              break;\r\n            }\r\n          }\r\n\r\n          let iconElement = document.getElementById(`${point}-weather-icon`) as HTMLElement;\r\n          iconElement.setAttribute(\"src\", \"https://openweathermap.org/img/wn/\" + weatherIcon + \"@2x.png\");\r\n\r\n          let tempElement = document.getElementById(`${point}-weather-temp`) as HTMLElement;\r\n          tempElement.textContent = Math.round(weatherTemp) + \"°F\";\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  title = 'alongtheway-frontend';\r\n  startLocation: string = \"\";\r\n  endLocation: string = \"\";\r\n  averageMPG: number = 0;\r\n  tankCapacity: number = 0;\r\n  map: google.maps.Map | null = null;\r\n  directionsService: google.maps.DirectionsService | null = null;\r\n  directionsRenderer: google.maps.DirectionsRenderer | null = null;\r\n  interest: string = \"\";\r\n\r\n  @ViewChild('mpgInput') mpgInputRef!: ElementRef<HTMLInputElement>;\r\n  @ViewChild('tankInput') tankInputRef!: ElementRef<HTMLInputElement>;\r\n\r\n  ngOnInit(): void {\r\n    const loader = new Loader({\r\n      apiKey: environment.apiKey,\r\n      libraries: ['places']\r\n    });\r\n\r\n    loader.load().then(() => {\r\n      const mapElement = document.getElementById(\"map\");\r\n      if (mapElement) {\r\n        this.map = new google.maps.Map(mapElement, {\r\n          center: { lat: 39.828175, lng: -98.5795 },\r\n          zoom: 6\r\n        });\r\n        this.directionsService = new google.maps.DirectionsService();\r\n        this.directionsRenderer = new google.maps.DirectionsRenderer({\r\n          map: this.map\r\n        });\r\n        this.initAutocomplete();\r\n      } else {\r\n        console.error(\"Could not find map element\");\r\n      }\r\n      for (let i = 0; i < this.stops.length; i++) {\r\n        this.initStopAutocomplete(i);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  initAutocomplete(): void {\r\n    const startInput = document.getElementById(\"start-input\") as HTMLInputElement;\r\n    const endInput = document.getElementById(\"end-input\") as HTMLInputElement;\r\n    // const stopInput = document.getElementById(\"stop-input-{{i}}\") as HTMLInputElement;\r\n    const mpgInput = document.getElementById(\"mpg-input\") as HTMLInputElement;\r\n    const tankInput = document.getElementById(\"tank-input\") as HTMLInputElement;\r\n\r\n    const startAutocomplete = new google.maps.places.Autocomplete(startInput);\r\n    const endAutocomplete = new google.maps.places.Autocomplete(endInput);\r\n    // const stopAutocomplete = new google.maps.places.Autocomplete(stopInput);\r\n\r\n    startAutocomplete.addListener(\"place_changed\", () => {\r\n      const place = startAutocomplete.getPlace();\r\n      if (place && place.geometry && place.geometry.location) {\r\n        this.map?.setCenter(place.geometry.location);\r\n        this.map?.setZoom(14);\r\n        this.startLocation = place.formatted_address ?? \"\";\r\n        console.log(\"Start location:\", this.startLocation);\r\n\r\n        this.getWeather(\"start\", place.geometry.location.lat(), place.geometry.location.lng());\r\n      }\r\n    });\r\n\r\n    endAutocomplete.addListener(\"place_changed\", () => {\r\n      const place = endAutocomplete.getPlace();\r\n      if (place && place.geometry && place.geometry.location) {\r\n        this.map?.setCenter(place.geometry.location);\r\n        this.map?.setZoom(14);\r\n        this.endLocation = place.formatted_address ?? \"\";\r\n        console.log(\"End location:\", this.endLocation);\r\n\r\n        this.getWeather(\"end\", place.geometry.location.lat(), place.geometry.location.lng());\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const mpgInput = this.mpgInputRef.nativeElement;\r\n      const tankInput = this.tankInputRef.nativeElement;\r\n\r\n      mpgInput.addEventListener(\"change\", () => {\r\n        this.averageMPG = Number(mpgInput.value);\r\n        console.log(\"Average MPG:\", this.averageMPG);\r\n      });\r\n\r\n\r\n      tankInput.addEventListener(\"change\", () => {\r\n        this.tankCapacity = Number(tankInput.value);\r\n        console.log(\"Tank Capacity:\", this.tankCapacity);\r\n      });\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (!this.interest) {\r\n      console.error(\"Interest not set\");\r\n      return;\r\n    }\r\n\r\n    this.calculateRoute();\r\n  }\r\n\r\n\r\n\r\n  handlePlacesData(placesData: any) {\r\n    if (placesData.status === 'OK') {\r\n      this.placesData = placesData;\r\n    } else {\r\n      console.error(\"Places API request failed:\", placesData.status);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  calculateRoute(): void {\r\n    this.averageMPG = +this.averageMPG;\r\n    this.tankCapacity = +this.tankCapacity;\r\n    const apiKey = environment.apiKey;\r\n\r\n\r\n    console.log(\"Calculating route...\");\r\n    console.log(\"Start location:\", this.startLocation);\r\n    console.log(\"End location:\", this.endLocation);\r\n    console.log(\"Interest:\", this.interest);\r\n    console.log(\"Average MPG:\", this.averageMPG);\r\n    console.log(\"Tank Capacity:\", this.tankCapacity);\r\n\r\n    if (!this.directionsService || !this.directionsRenderer) {\r\n      console.error(\"Directions service or renderer not initialized\");\r\n      return;\r\n    }\r\n\r\n    if (!this.startLocation || !this.endLocation) {\r\n      console.error(\"Start or end location not set\");\r\n      return;\r\n    }\r\n\r\n    if (!this.interest) {\r\n      console.error(\"Interest not set\");\r\n      return;\r\n    }\r\n\r\n    if (!this.averageMPG || !this.tankCapacity) {\r\n      console.error(\"Average MPG or tank capacity not set\");\r\n      return;\r\n    }\r\n\r\n    this.directionsService?.route(\r\n      {\r\n        origin: this.startLocation,\r\n        destination: this.endLocation,\r\n        waypoints: this.stops.map(stop => ({ location: stop.location, stopover: true })),\r\n        travelMode: google.maps.TravelMode.DRIVING\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          console.log(\"Route calculated successfully\");\r\n          this.directionsRenderer?.setDirections(result);\r\n\r\n          // calculate the midpoint of the route\r\n          // const midLat = (result!.routes[0].bounds.getNorthEast().lat() + result!.routes[0].bounds.getSouthWest().lat()) / 2;\r\n          // const midLng = (result!.routes[0].bounds.getNorthEast().lng() + result!.routes[0].bounds.getSouthWest().lng()) / 2;\r\n\r\n          // console.log('Midpoint:', midLat, midLng);\r\n\r\n          // new google.maps.Marker({\r\n          //   position: {lat: midLat, lng: midLng},\r\n          //   map: this.map,\r\n          //   title: 'Midpoint'\r\n          // });\r\n\r\n\r\n\r\n          // make the Google Places API request using the PlacesService\r\n\r\n          //     const placesService = new google.maps.places.PlacesService(this.map as google.maps.Map);\r\n          //     placesService.nearbySearch({\r\n          //           location: {lat: midLat, lng: midLng},\r\n          //           radius: 10000,\r\n          //           type: this.interest\r\n          //     }, (results, status) => {\r\n          //   if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n          //     this.handlePlacesData({results: results, status: status});\r\n          //   } else {\r\n          //     console.error(\"Places API request failed:\", status);\r\n          //   }\r\n          // });\r\n\r\n          // handle the placesData\r\n          // this.http.get(placesUrl).subscribe((placesData: any) => {\r\n          //   this.handlePlacesData(placesData);\r\n          // });\r\n\r\n\r\n          //Get destination time for weather forecast\r\n          let destinationTime;\r\n          let duration = result?.routes[0]?.legs[0]?.duration?.value;\r\n          let lat = result?.routes[0]?.legs[0]?.end_location.lat();\r\n          let lng = result?.routes[0]?.legs[0]?.end_location.lng();\r\n\r\n          if (duration) {\r\n            destinationTime = Date.now() / 1000 + duration;\r\n          }\r\n\r\n          this.getWeather(\"end\", lat, lng, destinationTime);\r\n\r\n          // Get the direction steps\r\n          const steps = result?.routes[0]?.legs[0]?.steps;\r\n          if (steps) {\r\n            this.showSteps(steps);\r\n          }\r\n\r\n          // Calculate gas usage\r\n          const distanceMeters = result?.routes[0]?.legs[0]?.distance?.value;\r\n          if (distanceMeters) {\r\n            const distanceMiles = distanceMeters * 0.000621371; // Convert meters to miles\r\n            const tanksNeeded = distanceMiles / (this.averageMPG * this.tankCapacity);\r\n            console.log(\"Tanks of gas needed:\", tanksNeeded);\r\n\r\n            // Display gas usage\r\n            const gasUsageInfoElement = document.getElementById(\"gas-usage-info\");\r\n            if (gasUsageInfoElement) {\r\n              gasUsageInfoElement.textContent = `Distance: ${distanceMiles.toFixed(2)} miles. Tanks of gas needed: ${tanksNeeded.toFixed(2)}`;\r\n            }\r\n          } else {\r\n            console.error(\"Could not calculate distance\");\r\n          }\r\n        } else {\r\n          console.error(\"Directions request failed:\", status);\r\n        }\r\n      });\r\n  }\r\n\r\n  addStop() {\r\n    const index = this.stops.length;\r\n    this.stops.push({ location: '' });\r\n    setTimeout(() => this.initStopAutocomplete(index));\r\n  }\r\n\r\n\r\n  removeStop(index: number) {\r\n    this.stops.splice(index, 1);\r\n    // After this line, Angular will automatically remove the corresponding inputs\r\n  }\r\n\r\n  initStopAutocomplete(index: number): void {\r\n    const stopInput = document.getElementById(`stop-input-${index}`) as HTMLInputElement;\r\n    const stopAutocomplete = new google.maps.places.Autocomplete(stopInput);\r\n\r\n    stopAutocomplete.addListener(\"place_changed\", () => {\r\n      const place = stopAutocomplete.getPlace();\r\n      if (place && place.geometry && place.geometry.location) {\r\n        this.map?.setCenter(place.geometry.location);\r\n        this.map?.setZoom(14);\r\n        this.stops[index].location = place.formatted_address ?? \"\";\r\n        console.log(`Stop location ${index}:`, this.stops[index].location);\r\n\r\n        this.getWeather(`stop${index}`, place.geometry.location.lat(), place.geometry.location.lng());\r\n      }\r\n    });\r\n  }\r\n\r\n  showSteps(steps: any[]): void {\r\n    const stepsContainer = document.getElementById('direction-steps');\r\n    if (stepsContainer) {\r\n      stepsContainer.innerHTML = \"\"; // Clear previous steps\r\n\r\n      steps.forEach((step: any) => {\r\n        const stepDiv = document.createElement('div');\r\n        stepDiv.innerHTML = step.instructions;\r\n        stepsContainer.appendChild(stepDiv);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<app-weather></app-weather>\r\n\r\n\r\n<div class=\"container\">\r\n  <div class=\"form-container\">\r\n    <label for=\"start-input\">Start location:</label>\r\n    <input id=\"start-input\" type=\"text\" [(ngModel)]=\"startLocation\">\r\n    <img id=\"start-weather-icon\" class=\"weather-icon\"><label id=\"start-weather-temp\" class=\"weather-temp\"></label>\r\n    <br>\r\n\r\n    <button href=\"#\" (click)=\"addStop()\">Add stop to your trip</button>\r\n    <div id=\"stopInputs\">\r\n      <div *ngFor=\"let stop of stops; index as i\">\r\n        <input id=\"stop-input-{{i}}\" type=\"text\" [(ngModel)]=\"stop.location\">\r\n        <button (click)=\"removeStop(i)\">Remove</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <label for=\"end-input\">End location:</label>\r\n    <input id=\"end-input\" type=\"text\" [(ngModel)]=\"endLocation\">\r\n    <img id=\"end-weather-icon\" class=\"weather-icon\"><label id=\"end-weather-temp\" class=\"weather-temp\"></label>\r\n    <br>\r\n\r\n\r\n\r\n\r\n\r\n    <label for=\"average-mpg-input\">Average MPG:</label>\r\n    <input #mpgInput id=\"average-mpg-input\" type=\"number\" min=\"0\" [(ngModel)]=\"averageMPG\">\r\n    <br>\r\n\r\n    <label for=\"tank-capacity-input\">Tank Capacity (Gallons):</label>\r\n    <input #tankInput id=\"tank-capacity-input\" type=\"number\" min=\"0\" [(ngModel)]=\"tankCapacity\">\r\n    <br>\r\n\r\n    <label for=\"interest-input\">Interest:</label>\r\n    <select id=\"interest-input\" [(ngModel)]=\"interest\">\r\n      <option value=\"restaurant\">Restaurant</option>\r\n      <option value=\"museum\">Museum</option>\r\n      <option value=\"park\">Park</option>\r\n      <!-- more options... -->\r\n    </select>\r\n    <br>\r\n\r\n\r\n    <button (click)=\"submitForm()\">Submit</button>\r\n\r\n\r\n    <div id=\"places-container\" class=\"places-container\">\r\n      <h3>Places of Interest</h3>\r\n      <ul id=\"places-list\">\r\n        <li *ngFor=\"let place of placesData.results\">{{ place.name }}, {{ place.vicinity }}</li>\r\n      </ul>\r\n    </div>\r\n\r\n\r\n    <!-- Outdated, used alternative -->\r\n    <!-- <div id=\"direction-steps\" class=\"queue\"></div> -->\r\n  </div>\r\n\r\n  <div id=\"map\" class=\"map-container\"></div>\r\n</div>\r\n\r\n\r\n<script [src]=\"environment.mapUrl\"></script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}